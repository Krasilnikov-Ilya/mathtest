package resources;

/**
 * Здесь лежит класс для методов, в него вложен метод суммирования
 * Метод принимает произвольное число int значений
 * И возвращает int результат сложения значений
 */

public class Mathematic {

    /*
    Метод сложения произвольного количества значений
    создан на основе метода сложения Sum(int a, int b)
    Главные отличия: метод получает массив int[] и принимает его за numbers
    И работает циклично, используя порядковый номер числа в массиве.

    Когда порядковый номер числа меньше длины массива,
    происходит увеличение результата на значение,
    содержавшееся в данном элементе массива. (summary += numbers[i])

    Оператор цикла i++ в данном случае заменяет i = i + 1
    будут работать и следующие операторы:
    i++ - увеличивает значение i на 1, возвращает значение i до увеличения.
    ++i - увеличивает значение i на 1, возвращает новое значение i.

    Цикл прерывается после добавления последнего числа из массива.
    После окончания цикла (i являлось последним в массиве, i = numbers.length)
    Результат summary возвращается методом.
     */
    public static int SumOfManyInt(int...numbers) {
        int summary = 0; //предварительное объявление результата
        //переменная, условие, действие цикла
        for(int i = 0 ; i < numbers.length; i++)
        {
            summary += numbers[i]; //увеличение результата
        }
        return summary;
    }

    // Вариант с "enhanced for loop" мне уже ijIdea подсказала.
    public static int NewSumOfManyInt(int...numbers) {
        int summary = 0;
        for (int number : numbers) {summary += number;}
        return summary;
    }
}