<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>mathematics</artifactId>
    <version>1.0-SIMPLIFY</version>

    <!-- Я создал ветки так как считаю необходимым разделить направления работы -->
    <!-- Основное - ветка simplify, это план-минимум: JUnit5 + maven-surefire -->
    <!-- То, что не просили - ветка extend, в ней функционал фреймворка будет расширяться -->

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!--так же интересует чем руководствоваться при выборе версий-->
        <!--свежими сочетаниями версий из примеров в документации с junit.org-->
        <junit-jupiter.version>5.8.2</junit-jupiter.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <!-- или есть лучший путь получить конфиг? -->
        <!-- у меня на примете есть только Test Automation Gear репозиторий https://github.com/sbtqa -->

    </properties>

    <dependencies>
        <!-- The JUnitPlatform runner has been deprecated, свою ошибку я понял-->
        <dependency>
            <!-- В целом - очень рад, что все куда проще, чем мне казалось -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <!-- Наверно, в данном контексте уместно будет сделать отсылку к секретному ингредиенту лапши -->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <!-- По опыту работы с TestNG я знаком с использованием suite.xml -->
                <!-- С JUnit у меня по этой области пробел в знаниях -->
                <!-- Суть вопроса: как лучше ограничивать круг поиска тестов? -->
                <!--configuration>
                    <groups>acceptance | !feature-a</groups>
                    <excludedGroups>integration, regression</excludedGroups>
                </configuration-->
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
        </plugins>
    </build>
</project>